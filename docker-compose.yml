version: "3.5"

services:

  neo4j:
    build:
      context: ./Neo4j
      dockerfile: Dockerfile
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./Neo4j/data:/var/lib/neo4j/data
      - ./Neo4j/import:/var/lib/neo4j/import
      - ./Neo4j/plugins:/var/lib/neo4j/plugins
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_heap_initial__size=2G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_security_allow__csv__import__from__file__urls=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_http_timeout_connect=60000
      - NEO4J_apoc_http_timeout_read=120000
      - NEO4J_apoc_jobs_pool_num__threads=4
      - NEO4J_apoc_jobs_schedule_num__threads=4
      - NEO4J_apoc_spatial_geocode_provider=osm
      - NEO4J_apoc_spatial_geocode_osm_throttle=5000
      - NEO4J_dbms_shell_enabled=true
  
  gungnir:
    build:
      context: ./Gungnir
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    links:
      - neo4j
    depends_on:
      - neo4j
  
  valkyrie:
    build:
      context: ./Valkyrie
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - GOOGLE_APPLICATION_CREDENTIALS=./credentials/google.json
    ports:
      - 5000:5000
  
  evalhalla:
    build:
      context: ./Evalhalla
      dockerfile: Dockerfile
    ports:
      - 8080:80
    links:
      - neo4j
      - gungnir
      - valkyrie
    depends_on:
      - neo4j
      - gungnir
      - valkyrie



